language: c

compiler:
- gcc
- clang
- cl

os:
- linux
- osx
- windows

dist: bionic
osx_image: xcode11

matrix:
  # include:
  # #
  # # Linux - gcc
  # #
  # - os: linux
  #   dist: bionic
  #   compiler: gcc
  #   env: MRUBY_INT_SIZE=MRB_INT64
  # - os: linux
  #   dist: bionic
  #   compiler: gcc
  #   env: MRUBY_INT_SIZE=MRB_INT32
  #
  # #
  # # Linux - clang
  # #
  # - os: linux
  #   dist: bionic
  #   compiler: clang
  #   env: MRUBY_INT_SIZE=MRB_INT64
  # - os: linux
  #   dist: bionic
  #   compiler: clang
  #   env: MRUBY_INT_SIZE=MRB_INT32
  #
  # #
  # # macOS - gcc
  # #
  # - os: osx
  #   osx_image: xcode11
  #   compiler: gcc
  #   env: MRUBY_INT_SIZE=MRB_INT64
  # - os: osx
  #   osx_image: xcode11
  #   compiler: gcc
  #   env: MRUBY_INT_SIZE=MRB_INT32
  #
  # #
  # # macOS - clang
  # #
  # - os: osx
  #   osx_image: xcode11
  #   compiler: clang
  #   env: MRUBY_INT_SIZE=MRB_INT64
  # - os: osx
  #   osx_image: xcode11
  #   compiler: clang
  #   env: MRUBY_INT_SIZE=MRB_INT32
  #
  # #
  # # Windows - gcc
  # #
  # - os: windows
  #   compiler: gcc
  #   env: MRUBY_INT_SIZE=MRB_INT64
  # - os: windows
  #   compiler: gcc
  #   env: MRUBY_INT_SIZE=MRB_INT32
  #
  # #
  # # Windows - clang
  # #
  # - os: windows
  #   compiler: clang
  #   env: MRUBY_INT_SIZE=MRB_INT64
  # - os: windows
  #   compiler: clang
  #   env: MRUBY_INT_SIZE=MRB_INT32
  #
  # #
  # # Windows - cl
  # #
  # - os: windows
  #   compiler: cl
  #   env: MRUBY_INT_SIZE=MRB_INT64
  # - os: windows
  #   compiler: cl
  #   env: MRUBY_INT_SIZE=MRB_INT32
  exclude:
  - os: linux
    compiler: cl
  - os: osx
    compiler: cl
  allow_failures:
  - os: windows
    compiler: gcc
  - os: windows
    compiler: clang

env:
  global:
  - MRUBY_REPOSITORY=https://github.com/mruby/mruby.git
  - MRUBY_BRANCH=master
  matrix:
  - MRUBY_INT_SIZE=MRB_INT64
  - MRUBY_INT_SIZE=MRB_INT32

before_install:
- |
  if [ "${TRAVIS_OS_NAME}" = "osx" ] && [ "${TRAVIS_COMPILER}" = "gcc" ]; then
    brew update
    brew install gcc
    export CC=gcc-9
    export CXX=gcc-9
  fi
- |
  if [ "${TRAVIS_OS_NAME}" = "windows" ]; then
    VS2017DIR="/c/Program Files (x86)/Microsoft Visual Studio/2017"
    export PATH=$PATH:"${VS2017DIR}/BuildTools/MSBuild/15.0/Bin"
    export PATH=$PATH:"${VS2017DIR}/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx64/x64"

    choco install winflexbison
    WINFLEXBISON_DIR="/c/ProgramData/chocolatey/lib/winflexbison/tools"
    cp "${WINFLEXBISON_DIR}/win_bison.exe" "${WINFLEXBISON_DIR}/bison.exe"
    export PATH=$PATH:"${WINFLEXBISON_DIR}"
  fi

before_script:
- git clone --branch ${MRUBY_BRANCH} --depth 1 ${MRUBY_REPOSITORY} mruby
- export MRUBY_TOOLCHAIN=${TRAVIS_COMPILER}
- echo MRUBY_TOOLCHAIN=$MRUBY_TOOLCHAIN
- echo MRUBY_INT_SIZE=$MRUBY_INT_SIZE

script:
- ruby mruby/minirake -f Rakefile -j 4 all
- ruby mruby/minirake -f Rakefile -j 4 test

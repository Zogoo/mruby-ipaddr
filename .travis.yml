language: c

compiler:
- gcc
- clang
- cl

os:
# - linux
# - osx
- windows

dist: bionic
osx_image: xcode11

env:
  global:
  - MRUBY_REPOSITORY=https://github.com/mruby/mruby.git
  - MRUBY_BRANCH=master
  matrix:
  - MRUBY_INT_SIZE=MRB_INT64
  # - MRUBY_INT_SIZE=MRB_INT32
  # - MRUBY_INT_SIZE=MRB_INT16

matrix:
  exclude:
  - os: linux
    compiler: cl
  - os: osx
    compiler: cl
  allow_failures:
  - os: windows
    compiler: gcc
  - os: windows
    compiler: clang
  - env: MRUBY_INT_SIZE=MRB_INT16

before_install:
- |
  if [ "${TRAVIS_OS_NAME}" = "windows" ]; then
    choco install winflexbison
    WINFLEXBISON_DIR="/c/ProgramData/chocolatey/lib/winflexbison/tools"
    cp "${WINFLEXBISON_DIR}/win_bison.exe" "${WINFLEXBISON_DIR}/bison.exe"

    echo '@echo off'                                                              >  rake.cmd
    echo 'set PATH=%ChocolateyInstall%\lib\winflexbison\tools;%PATH%'             >> rake.cmd
    echo 'set VS2017=%ProgramFiles(x86)%\Microsoft Visual Studio\2017\BuildTools' >> rake.cmd
    echo 'call "%VS2017%\VC\Auxiliary\Build\vcvars64.bat"'                        >> rake.cmd
    echo 'echo.'                                                                  >> rake.cmd
    echo 'echo rake %*'                                                           >> rake.cmd
    echo 'echo.'                                                                  >> rake.cmd
    echo 'rake %*'                                                                >> rake.cmd

    export RAKE_COMMAND="cmd //c rake.cmd"
  else
    export RAKE_COMMAND="rake"
  fi
- |
  if [ "${TRAVIS_OS_NAME}" = "osx" ] && [ "${TRAVIS_COMPILER}" = "gcc" ]; then
    export CC=gcc-9
    export CXX=gcc-9
  fi

before_script:
- git clone --branch ${MRUBY_BRANCH} --depth 1 ${MRUBY_REPOSITORY} mruby
- export MRUBY_TOOLCHAIN=${TRAVIS_COMPILER}
- echo MRUBY_TOOLCHAIN=$MRUBY_TOOLCHAIN
- echo MRUBY_INT_SIZE=$MRUBY_INT_SIZE
- echo RAKE_COMMAND=$RAKE_COMMAND

script:
- $RAKE_COMMAND all
- $RAKE_COMMAND test
